import ui

# สร้าง view หลัก
view = ui.View()
view.background_color = '#bbbbbb'
view.name = 'Concrete mix design #2'

# สร้าง text
labels = [
    ("1.กําหนด fc'(ksc.)", (20, 20)), 
    ("2.กําหนดค่า slump (ซม.)", (20, 60)),
    ("3.กําหนดขนาดหิน (มม.)", (20, 100)),
    ("(1-450)",(275, 20)),     
]
for text, pos in labels:
    lbl = ui.Label(frame=(pos[0], pos[1], 300, 30), text=text, text_color='black', alignment=ui.ALIGN_LEFT)
    view.add_subview(lbl)

# สร้าง ช่อง ใส่ตัวเลข
input_fc = ui.TextField(frame=(200, 20, 70, 30), border_color='gray',text = '210', border_width=1, corner_radius=5)

# สร้าง Dropdown Menu
class DropdownView(ui.View):
    def __init__(self, frame, options, callback):
        super().__init__(frame=frame)
        self.background_color = 'white'
        self.border_color = 'black'
        self.border_width = 1
        self.corner_radius = 5
        self.options = options
        self.callback = callback
        self.hidden = True
        
        y = 0
        for option in options:
            btn = ui.Button(frame=(0, y, frame[2], 30))
            btn.title = str(option)
            btn.action = self.option_selected
            btn.name = str(option)
            btn.border_width = 0.5
            btn.border_color = 'lightgray'
            btn.background_color = 'white'
            self.add_subview(btn)
            y += 30
            
        self.height = y
        
    def option_selected(self, sender):
        self.hidden = True
        self.callback(sender.name)

# สร้าง dropdown สําหรับค่า slump
input_slump = ui.TextField(frame=(200, 60, 70, 30), border_color='gray', text = '12.5', border_width=1, corner_radius=5)
input_slump.text_color = 'black'

slump_dropdown_btn = ui.Button(frame=(270, 60, 100, 30))
slump_dropdown_btn.background_color = '#d3d3d3'
slump_dropdown_btn.border_width = 1
slump_dropdown_btn.border_color = 'gray'
slump_dropdown_btn.corner_radius = 5
slump_dropdown_btn.title = 'เลือกค่า slump'
slump_dropdown_btn.tint_color = 'black'

def toggle_slump_dropdown(sender):
    # ซ่อน dropdown ของหินก่อนเปิด dropdown ของ slump
    rock_dropdown_options.hidden = True
    if slump_dropdown_options.hidden:
        slump_dropdown_options.hidden = False
    else:
        slump_dropdown_options.hidden = True

slump_dropdown_btn.action = toggle_slump_dropdown

def select_slump_option(option):
    input_slump.text = option

# แก้ไขตําแหน่ง - วาง dropdown ของ slump ทางซ้ายแทน
slump_dropdown_options = DropdownView(frame=(130, 60, 70, 120), options=['7.5', '10', '12.5', '15'], callback=select_slump_option)

# สร้าง dropdown สําหรับขนาดหิน
input_rock = ui.TextField(frame=(200, 100, 70, 30), border_color='gray', text = '20', border_width=1, corner_radius=5)
input_rock.text_color = 'black'

rock_dropdown_btn = ui.Button(frame=(270, 100, 100, 30))
rock_dropdown_btn.background_color = '#d3d3d3'
rock_dropdown_btn.border_width = 1
rock_dropdown_btn.border_color = 'gray'
rock_dropdown_btn.corner_radius = 5
rock_dropdown_btn.title = 'เลือกขนาดหิน'
rock_dropdown_btn.tint_color = 'black'

def toggle_rock_dropdown(sender):
    # ซ่อน dropdown ของ slump ก่อนเปิด dropdown ของหิน
    slump_dropdown_options.hidden = True
    if rock_dropdown_options.hidden:
        rock_dropdown_options.hidden = False
    else:
        rock_dropdown_options.hidden = True

rock_dropdown_btn.action = toggle_rock_dropdown

def select_rock_option(option):
    input_rock.text = option

# แก้ไขตําแหน่ง - วาง dropdown ของหินทางซ้ายแทน
rock_dropdown_options = DropdownView(frame=(130, 100, 70, 60), options=['20', '25'], callback=select_rock_option)

def approximate_w_c(compression_strength):
    """
    ประมาณค่าอัตราส่วนน้ําต่อปูนซีเมนต์ (w/c) จากกําลังอัด (MPa) ตามข้อมูลกราฟ

    Args:
        compression_strength (float): กําลังอัดที่ต้องการ (MPa)

    Returns:
        float: ค่า w/c โดยประมาณ
    * ใช้ได้เฉพาะ ปูนซีเมนต์ประเภทที่หนึ่งและประเภทที่สาม
    """
    data = {
        23: 0.75, 24: 0.72, 25: 0.70, 26: 0.68, 27: 0.66, 28: 0.64,
        29: 0.62, 30: 0.60, 31: 0.58, 32: 0.56, 33: 0.54, 34: 0.53,
        35: 0.52, 36: 0.50, 37: 0.49, 38: 0.48, 39: 0.47, 40: 0.46,
        41: 0.45, 42: 0.44, 43: 0.43, 44: 0.42, 45: 0.41, 46: 0.40
    }

    strengths = sorted(data.keys())
    w_cs = [data[s] for s in strengths]

    if compression_strength <= strengths[0]:
        return w_cs[0]
    elif compression_strength >= strengths[-1]:
        return w_cs[-1]

    for i in range(len(strengths) - 1):
        if strengths[i] <= compression_strength <= strengths[i + 1]:
            strength_ratio = (compression_strength - strengths[i]) / (strengths[i + 1] - strengths[i])
            return w_cs[i] + strength_ratio * (w_cs[i + 1] - w_cs[i])

    return None  # กรณีไม่พบค่าในช่วง

def cal1(sender):
    try:
        # ดึงค่าจาก textfields
        fc_ksc = float(input_fc.text) if input_fc.text else 0
        slump = float(input_slump.text) if input_slump.text else 0 
        rock = int(input_rock.text.strip()) if input_rock.text else 0  
        if fc_ksc <= 0 or fc_ksc > 450:
            raise Exception('''
            กรุณาใส่ค่า 1-450 ksc เท่านั้น
            ''')
        if rock not in [20, 25]:
            raise Exception('''         กรุณาใส่ค่า (20 หรือ 25) มม. เท่านั้น''')
        
        if slump not in [7.5, 10, 12.5, 15]:
            raise Exception('''                        กรุณาใส่ค่า slump\n.             (7.5, 10, 12.5, 15) ซม. เท่านั้น''')
        
        fc_mpa = fc_ksc / 10.197  # แปลงหน่วย ksc เป็น MPa 
        
        # กําลังอัดเฉลี่ยที่ใช้ในการออกแบบส่วนผสมคอนกรีต กรณีที่ไม่มีข้อมูลกําลังอัดคอนกรีต (Mpa)
        if fc_mpa < 21:
            sn = 7
        elif fc_mpa >= 21 and fc_mpa < 35:
            sn = 8.5
        elif fc_mpa >= 35 and fc_mpa <= 45:
            sn = 10
        else:
            sn = None
            #result.text='กําลังอัดใช้ได้ไม่เกิน 450 ksc'
        fc2 = fc_mpa + sn
        w_c2 = round((approximate_w_c(fc2)),2)
        # 3. ปริมาณน้ําที่เหมาะสม (ลิตร/ลูกบาศก์เมตร)
        water_data = {
            20: {7.5: 180, 10: 190, 12.5: 200, 15: 210},
            25: {7.5: 170, 10: 180, 12.5: 190, 15: 200}
        }
        global water_volume
        water_volume = water_data[rock][slump]      
    
        # 4. ปริมาณปูนซีเมนต์ (กก.)
        global cement_weight2 
        cement_weight2= round((water_volume / w_c2),2)
        
        # 5. ปริมาณทราย
        sand_data = {20: 400, 25: 380}  # ปริมาณทรายโดยประมาณ 
        cement_volume2 = round((cement_weight2 / 3.15),3)  # ค่าความถ่วงจําเพาะของปูนซีเมนต์
        sand_volume2 = sand_data[rock] - cement_volume2
        global sand_weight2
        sand_weight2 = sand_volume2 * 2.65  # ค่าความถ่วงจําเพาะของทราย
        # 6. ปริมาณหิน
        rock_volume2 = 1000 - water_volume - cement_volume2 - sand_volume2 - 10
        global rock_weight2
        rock_weight2 = rock_volume2 * 2.70  # ค่าความถ่วงจําเพาะของหิน
        # แสดงผลลัพธ์
        result.text = f'''
        กรณี 2 ไม่มีข้อมูลกําลังอัดคอนกรีต
        
        กําลังอัดคอนกรีต fc' = {fc_ksc} ksc.
        ค่า slump = {slump} ซม.
        ขนาดใหญ่สุดของหิน = {rock} มม.
        กําลังอัดเฉลี่ยคอนกรีต = {fc2:.2f} MPa
        อัตราส่วนน้ําต่อปูนซีเมนต์ w/c = {w_c2:.2f}\n
        ส่วนผสมคอนกรีต 1 ลบ.ม.
        1. ปริมาณปูนซีเมนต์ = {cement_weight2:,.2f} กก.
            หรือ {cement_weight2//50} ถุง กับอีก {cement_weight2 % 50:.2f} กก.
        2. ปริมาณทรายหยาบ = {sand_weight2:,.2f} กก.
        3. ปริมาณหิน = {rock_weight2:,.2f} กก.
        4. ปริมาณน้ํา = {water_volume:,.2f} ลิตร
        '''
    except ValueError:
        result.text = '''           กรุณาใส่ค่าให้ถูกต้อง'''
    except TypeError:
        result.text = '''           กําลังอัด fc' ใช้ได้ไม่เกิน 450 ksc.'''
    except KeyError:
        result.text = "กรุณาใส่ค่า slump(7.5, 10, 12.5, 15) ซม. เท่านั้น"
    except Exception as e:
        result.text = str(e)

import threading
import clipboard
# ฟังก์ชันคัดลอกข้อความ
def copy_text(sender):
    clipboard.set(result.text)
    # เปลี่ยนสีปุ่มเมื่อคัดลอกแล้ว
    sender.background_color = 'green'
    sender.tint_color = 'white'
    sender.title = 'OK'

    # ตั้งค่ากลับหลังจาก 1 วินาที
    def reset_button():
        sender.background_color = '#d3d3d3'
        sender.tint_color = 'black'
        sender.title = 'Copy'
    
    threading.Timer(1.0, reset_button).start()  # ตั้งเวลาสําหรับเปลี่ยนสีและข้อความกลับเป็นปกติ


# สร้าง ปุ่มคํานวณ
cal = ui.Button(title='คํานวณ', font=('<system>', 18), background_color='#d3d3d3',tint_color='black',border_color='black',border_width=1, corner_radius=15)
cal.frame = (140, 250, 100, 40)
cal.action = cal1

# ปุ่มสําหรับคัดลอก
copy_button = ui.Button(frame=(140, 650, 100, 40))  
copy_button.title = 'Copy'
copy_button.font = ('<System>', 18)
copy_button.tint_color = 'black'
copy_button.background_color = '#d3d3d3'
copy_button.corner_radius = 15
copy_button.border_color = 'black'
copy_button.border_width = 1
copy_button.action = copy_text
      

# สร้าง label สําหรับแสดงผลลัพธ์
result = ui.Label(frame=(20, 270, 350, 400), text='', text_color='black', border_color='black',border_width=1, corner_radius=15, number_of_lines=0,  background_color='#d7d7d7')
            
                                                      
# ฟังก์ชันเปิดหน้าข้อมูล 1
def show_info(sender):
    info_view = ui.View()
    info_view.name = 'ข้อมูลเพิ่มเติม 1'
    info_view.background_color = '#eeeeee'
    info_view.frame = (0, 0, 400, 500)
    
    # สร้าง รูป 1
    view2 = ui.ImageView(frame=(30, 200, 320, 280))
    view2.image = ui.Image.named('fc.PNG')
    info_view.add_subview(view2)
     
    # สร้าง รูป 2
    view2 = ui.ImageView(frame=(30, 485, 320, 180))
    view2.image = ui.Image.named('slump.PNG')
    info_view.add_subview(view2)     
     
    # ข้อความในหน้าใหม่
    info_text = ui.Label(frame=(10, 0, 380, 250), 
    text='''กําหนดความต้องการ ในการออกแบบคอนกรีต
    1. Specified Compressive Strength , fc'
    กําลังอัดทรงกระบอก fc' หน่วย MPa. , 1.0 Mpa. = 10.197 ksc.
    2. ค่ายุบตัวคอนกรีต slump
    7.50 ซม. 10.00 ซม. 12.50 ซม. 15.00 ซม.
    3. ขนาดใหญ่สุดของหินที่ใช้
    20 มม. , 25 มม.
    ''', 
    number_of_lines=0, text_color='black')
    
    # ปุ่มปิด
    close_btn = ui.Button(title='ปิด', frame=(150, 420, 100, 40), 
    background_color='#d3d3d3', tint_color='black', border_color='black', border_width=1,corner_radius=15)
    close_btn.frame = (150,670,80,40)
    
    def close_view(sender):
        info_view.close()
    
    close_btn.action = close_view

    info_view.add_subview(info_text)
    info_view.add_subview(close_btn)
    info_view.present('sheet')

# ฟังก์ชันเปิดหน้าข้อมูล 2
def show_info2(sender):
    info_view2 = ui.View()
    info_view2.name = 'ข้อมูลเพิ่มเติม 2'
    info_view2.background_color = '#eeeeee'
    info_view2.frame = (0, 0, 400, 600)
        
    # สร้าง รูป 1
    view2 = ui.ImageView(frame=(30, 0, 320, 280))
    view2.image = ui.Image.named('wc.PNG')
    info_view2.add_subview(view2)
    
    # สร้าง รูป 2
    view2 = ui.ImageView(frame=(30, 270, 320, 100))
    view2.image = ui.Image.named('fc2.PNG')
    info_view2.add_subview(view2)
    
    # สร้าง รูป 3
    view2 = ui.ImageView(frame=(30, 370, 320, 100))
    view2.image = ui.Image.named('rock.PNG')
    info_view2.add_subview(view2)
    
    # สร้าง รูป 4
    view2 = ui.ImageView(frame=(30, 470, 320, 100))
    view2.image = ui.Image.named('sn.PNG')
    info_view2.add_subview(view2)
    

    # ปุ่มปิด
    close_btn2 = ui.Button(title='ปิด', frame=(160, 540, 80, 40), 
    background_color='#d3d3d3', tint_color='black', border_color='black', border_width=1, corner_radius=15)
    close_btn2.frame = (160,670,80,40)
    
    def close_view2(sender):
        info_view2.close()
    
    close_btn2.action = close_view2

    info_view2.add_subview(close_btn2)
    info_view2.present('sheet')

# ฟังก์ชันเปิดหน้าข้อมูล 3
def show_info3(sender):
    info_view3 = ui.View()
    info_view3.name = 'ส่วนผสมจากปริมาตร'
    info_view3.background_color = '#eeeeee'
    info_view3.frame = (0, 0, 400, 600)
    # สร้าง text
    labels = [
        ("จํานวนคอนกรีต(ลบ.ม.)", (20, 20)), 
        
    ]
    for text, pos in labels:
        lbl = ui.Label(frame=(pos[0], pos[1], 300, 30), text=text, text_color='black', alignment=ui.ALIGN_LEFT)
        info_view3.add_subview(lbl)
                
    # สร้าง ช่อง ใส่ตัวเลข
    input_concrete = ui.TextField(frame=(200, 20, 70, 30), border_color='gray',text = '1', border_width=1, corner_radius=5)
    info_view3.add_subview(input_concrete)
    
    def cal2(sender):
      try:
          # ดึงค่าจาก textfields
          volume_concrete = float(input_concrete.text) if input_concrete.text else 1
          
          cement = cement_weight2 * volume_concrete
          sand = sand_weight2 * volume_concrete
          rock = rock_weight2 * volume_concrete
          water = water_volume * volume_concrete
          
          cement_kg = cement / 50
          cement_tub = cement_kg * 6.5
          sand_tub = cement_kg * 12
          rock_tub = cement_kg * 24
          water_tub = cement_kg * 6
                    
          sand_basket = cement_kg * 8
          rock_basket = cement_kg * 13
          
          
          result2.text = f'''
          ปริมาตรคอนกรีต {volume_concrete:,.2f} ลบ.ม.        
          
          ปูนซีเมนต์ {cement:,.2f} กก.
          หรือ ปูนซีเมนต์ 50 กก. 
          = {cement//50} ถุง กับอีก {cement % 50:.2f} กก.           
          ทรายหยาบ {sand:,.2f} กก.
          หิน {rock:,.2f} กก.
          น้ํา {water} ลิตร
          
          ใช้ถังปูนตวง
          ปูนซีเมนต์ = {cement_tub:,.2f} ถัง
          ทรายหยาบ = {sand_tub:,.2f} ถัง
          หิน = {rock_tub:,.2f} ถัง
          น้ํา = {water_tub:,.2f} ถัง
          
          ใช้ปุ้งกี๋ตวง
          ปูนซีเมนต์ = {cement_tub:,.2f} ถัง
          ทรายหยาบ = {sand_basket:,.2f} ปุ้งกี๋
          หิน = {rock_basket:,.2f} ปุ้งกี๋
          น้ํา = {water_tub:,.2f} ถัง
          
          '''
          
      except Exception as e:
          result2.text = str(e)      
    
    import threading
    import clipboard
    # ฟังก์ชันคัดลอกข้อความ
    def copy_text2(sender):
        clipboard.set(result2.text)
        # เปลี่ยนสีปุ่มเมื่อคัดลอกแล้ว
        sender.background_color = 'green'
        sender.tint_color = 'white'
        sender.title = 'OK'
    
        # ตั้งค่ากลับหลังจาก 1 วินาที
        def reset_button():
            sender.background_color = '#d3d3d3'
            sender.tint_color = 'black'
            sender.title = 'Copy'
        
        threading.Timer(1.0, reset_button).start()  # ตั้งเวลาสําหรับเปลี่ยนสีและข้อความกลับเป็นปกติ
    
    # สร้าง label สําหรับแสดงผลลัพธ์
    result2 = ui.Label(frame=(20, 80, 350, 570), text='', text_color='black', border_color='black',border_width=1, corner_radius=15, number_of_lines=0,  background_color='#d7d7d7')
    info_view3.add_subview(result2)
    
    # ปุ่มสําหรับคัดลอก
    copy_button2 = ui.Button(frame=(150, 600, 100, 40))  
    copy_button2.title = 'Copy'
    copy_button2.font = ('<System>', 18)
    copy_button2.tint_color = 'black'
    copy_button2.background_color = '#d3d3d3'
    copy_button2.corner_radius = 15
    copy_button2.border_color = 'black'
    copy_button2.border_width = 1
    copy_button2.action = copy_text2
    info_view3.add_subview(copy_button2)
    
    # สร้าง ปุ่มคํานวณ
    cal = ui.Button(title='คํานวณ', font=('<system>', 18), background_color='#d3d3d3',tint_color='black',border_color='black',border_width=1, corner_radius=15)
    cal.frame = (140, 60, 100, 40)
    cal.action = cal2
    info_view3.add_subview(cal)
    
    # ปุ่มปิด
    close_btn3 = ui.Button(title='ปิด', frame=(160, 540, 80, 40), 
    background_color='#d3d3d3', tint_color='black', border_color='black', border_width=1, corner_radius=15)
    close_btn3.frame = (160,670,80,40)
    
    def close_view3(sender):
        info_view3.close()
    
    close_btn3.action = close_view3

    info_view3.add_subview(close_btn3)
    info_view3.present('sheet')

# สร้างปุ่ม "ดูข้อมูล"
info_button = ui.Button(title='ดูข้อมูล 1', font=('<system>', 18), background_color='#d3d3d3',tint_color='black',border_color='black',border_width=1, corner_radius=15)
info_button.frame = (20, 180, 100, 40)
info_button.action = show_info

# สร้างปุ่ม "ดูข้อมูล2"
info_button2 = ui.Button(title='ดูข้อมูล2', font=('<system>', 18), background_color='#d3d3d3',tint_color='black',border_color='black',border_width=1, corner_radius=15)
info_button2.frame = (140, 180, 100, 40)
info_button2.action = show_info2

# สร้างปุ่ม "คํานวณส่วนผสมจากปริมาตร"
info_button3 = ui.Button(title='ปริมาตร', font=('<system>', 18), background_color='#d3d3d3',tint_color='black',border_color='black',border_width=1, corner_radius=15)
info_button3.frame = (260, 180, 100, 40)
info_button3.action = show_info3

# เพิ่ม subviews
view.add_subview(input_fc)
view.add_subview(input_slump)
view.add_subview(slump_dropdown_btn)
view.add_subview(slump_dropdown_options)
view.add_subview(input_rock)
view.add_subview(rock_dropdown_btn)
view.add_subview(rock_dropdown_options)
view.add_subview(result)
view.add_subview(cal)
view.add_subview(copy_button)
view.add_subview(info_button)
view.add_subview(info_button2)
view.add_subview(info_button3)

view.present()
